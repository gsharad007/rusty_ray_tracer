on:
  pull_request:
  push:
    branches:
      - main

name: Tests

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test
    env:
      PROJECT_NAME_UNDERSCORE: rusty_ray_tracer
      CARGO_INCREMENTAL: 0
      # RUSTFLAGS: -Zprofile -Ccodegen-units=1 -Copt-level=0 -Clink-dead-code -Coverflow-checks=off -Zpanic_abort_tests -Cpanic=abort
      # RUSTDOCFLAGS: -Cpanic=abort
      #     zip -0 ccov.zip `find . \( -name "PROJECT_NAME_UNDERSCORE*.gc*" \) -print`;
      #     grcov ccov.zip -s . -t lcov --llvm --branch --ignore-not-existing --ignore "/*" -o lcov.info;
      RUSTFLAGS: -C instrument-coverage
      LLVM_PROFILE_FILE: target/debug/coverage/$PROJECT_NAME_UNDERSCORE-%p-%m.profraw
      IGNORE_PATTERN: '(.*\.cargo[/\\]+registry[/\\]+.*)|(.*\.rustup[/\\]+.*)|(.*test.*)'
      RUST_BACKTRACE: full
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        os: [ubuntu]
    steps:
      - uses: actions/checkout@master
      - uses: actions-rs/toolchain@master
        with:
          profile: minimal
          toolchain: nightly
          override: true
          components: llvm-tools-preview
      - name: Cache dependencies
        uses: actions/cache@master
        env:
          cache-name: cache-dependencies
        with:
          path: |
            ~/.cargo/.crates.toml
            ~/.cargo/.crates2.json
            ~/.cargo/bin
            ~/.cargo/registry/index
            ~/.cargo/registry/cache
            target
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('Cargo.lock') }}
      - name: Install helpers
        run: cargo install cargo2junit cargo-llvm-cov # grcov cargo-binutils cargo-llvm-codecov-converter
      - name: Generate test result and coverage report
        run: |
          cargo test     --no-fail-fast $CARGO_OPTIONS -- -Z unstable-options --report-time --format json | cargo2junit > results.xml;

          cargo llvm-cov --no-fail-fast $CARGO_OPTIONS --lcov --output-path lcov.info;

          # cargo test     --no-fail-fast $CARGO_OPTIONS;

          # executables=$(cargo test --tests --no-run --message-format=json | jq -r "select(.profile.test == true) | .executable");
          # cargo profdata -- merge -sparse target/debug/coverage/*.profraw -o target/debug/coverage/merged.profdata;
          # cargo cov -- export $executables --instr-profile=target/debug/coverage/merged.profdata --ignore-filename-regex="$IGNORE_PATTERN" --skip-functions --format=lcov >lcov.info;

          # grcov . --binary-path ./target/debug/ -s . -t lcov --ignore-not-existing --ignore "/*" -o lcov.info;
      - name: Archive test
        uses: actions/upload-artifact@master
        with:
          name: test-results-${{ runner.os }}-${{ runner.arch }}
          path: results.xml
      - name: Archive codecoverage
        uses: actions/upload-artifact@master
        with:
          name: codecoverage-results-${{ runner.os }}-${{ runner.arch }}
          path: lcov.info
      - name: Upload test results
        uses: EnricoMi/publish-unit-test-result-action/composite@master
        with:
          check_name: Test Results
          github_token: ${{ secrets.GITHUB_TOKEN }}
          files: results.xml
      - name: Upload to CodeCov
        uses: codecov/codecov-action@v3
        with:
          # required for private repositories:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./lcov.info
          fail_ci_if_error: true
          verbose: true
          env_vars: OS
          name: ${{ env.PROJECT_NAME_UNDERSCORE }}-${{ runner.os }}
